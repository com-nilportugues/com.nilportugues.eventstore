stages:
    #- tests
    #- build_jar
    - push_github
    - create_tag_github

variables:
    GIT_BRANCH: $CI_COMMIT_REF_NAME
    CWD: $CI_PROJECT_DIR
    GITHUB_REPOSITORY: git@github.com:com-nilportugues/com.nilportugues.eventstore.git
    
#tests:
#    stage: tests
#    image: maven:3.5.2-jdk-8-alpine
#    script:
#        - mvn test

#build_jar:
#    stage: build_jar
#    image: maven:3.5.2-jdk-8-alpine
#    script:
#        - mvn package -Dmaven.test.skip=true
#    only:
#        - master
        
sync_with_github:
    stage: push_github
    image: registry.gitlab.com/nilportugues/docker-github:latest
    variables:
        COMMIT_MSG: "Sync with public repository"
    script:
        ## Clone github repository
        - git clone ${GITHUB_REPOSITORY} /tmp/release
        - cd /tmp/release
        - git checkout -b ${GIT_BRANCH} && git checkout ${GIT_BRANCH} && git push origin ${GIT_BRANCH}
        - cd ${CWD}
        ## Preparations for commit
        - COMMIT_MSG=$(git show | head -n 5 | tail -n 1 | xargs)
        - rm -rf .git
        - cp -Rf ./ /tmp/release/
        - cd /tmp/release
        - date > .sync
        ## Remove extra files
        - if [ -e _sync ]; then rm _sync; fi
        ## Push code to github.com
        - if [[ -n $(git status -s) ]]; then git add -A . && git commit -m ${COMMIT_MSG} && git push origin ${GIT_BRANCH}; else echo "Nothing to commit..."; fi
         
        
create_tag_github:
    stage: create_tag_github
    image: registry.gitlab.com/nilportugues/docker-github:latest
    script:
        - git clone ${GITHUB_REPOSITORY} /tmp/release 
        - git checkout -b ${GIT_BRANCH}   
        - git tag -a $GIT_BRANCH -m "Release of version $GIT_BRANCH"
        - git push --tags
    only:    
        - tags